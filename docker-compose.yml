version: "3.0"
services:
  # nginx:
  #   image: nginx
  #   volumes:
  #     - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
  #   ports:
  #     - "80:80"
  # communication:
  #   container_name: communication
  #   restart: always
  #   build: ./packages/communication
  #   # networks:
  #   #   - airport-net
  #   env_file:
  #     - ".base.env"
  #   depends_on:
  #     - postgres
  #   links:
  #     - postgres
  # tower:
  #   container_name: tower
  #   restart: always
  #   build: ./packages/control-tower
  #   # networks:
  #   #   - airport-net
  #   env_file:
  #     - ".base.env"
  #   depends_on:
  #     - communication
  #     - postgres
  # client:
  #   container_name: client
  #   restart: always
  #   build: ./packages/client
  #   # networks:
  #   #   - airport-net
  #   env_file:
  #     - ".base.env"
  #   depends_on:
  #     - communication
  # generator:
  #   container_name: generator
  #   restart: always
  #   build: ./packages/generator
  #   # networks:
  #   #   - airport-net
  #   env_file:
  #     - ".base.env"
  #   depends_on:
  #     - tower
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ofek
      POSTGRES_PASSWORD: ofekgabay
      POSTGRES_DB: air_port
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./config/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    ports:
      - 5432:5432
    # networks:
    #   - airport-net
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8081:8080
    depends_on:
      - postgres
    # networks:
    #   - airport-net
  pgadmin:
    image: chorss/docker-pgadmin4
    restart: always
    ports:
      - 5050:5050
    depends_on:
      - postgres
    # networks:
    #   - airport-net
volumes:
  postgres: ~
# networks:
#   airport-net:
#     driver: bridge
