generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Airport {
  country     String
  name        String
  controllers Controller[]
  Ground      Ground?
  ILSs        ILS?
  SIDs        SID[]

  Runways Runway[]
  @@id([country, name])
}

model Waypoint {
  name        String     @unique
  AirportName String?
  Country     String
  Ground      Ground?    @relation(fields: [groundCountry, groundAirportName], references: [Country, AirportName])
  ILS         ILS?       @relation(fields: [iLSAirportCountry, iLSAirportName], references: [AirportCountry, AirportName])
  Controller  Controller @relation(fields: [Country, ControllerName], references: [Country, Name])
  SID         SID?       @relation(fields: [sIDCountry, sIDAirportName], references: [Country, AirportName])
  Airplane    Airplane?

  groundCountry     String?
  groundAirportName String?
  iLSAirportCountry String?
  iLSAirportName    String?
  sIDAirportName    String?
  rf                RF
  ControllerName    String
  Lat               Float
  Lng               Float
  sIDCountry        String?
  @@id([Country, name])
}

model ILS {
  AirportCountry     String
  AirportName        String
  Airport            Airport    @relation(fields: [AirportCountry, AirportName], references: [country, name])
  waypoints_by_order Waypoint[]

  @@id([AirportCountry, AirportName])
}

model Controller {
  RF        RF
  Name      String
  Country   String
  Airport   Airport?   @relation(fields: [airportCountry, airportName], references: [country, name])
  Waypoints Waypoint[]

  airportCountry String?
  airportName    String?
  @@id([Country, Name])
}

model SID {
  Country            String
  AirportName        String
  Airport            Airport    @relation(fields: [Country, AirportName], references: [country, name])
  waypoints_by_order Waypoint[]

  @@id([Country, AirportName])
}

model Ground {
  Country     String
  AirportName String
  Airport     Airport    @relation(fields: [Country, AirportName], references: [country, name])
  waypoints   Waypoint[]

  @@id([Country, AirportName])
}

model Airplane {
  id           String    @id @default(uuid())
  create_at    DateTime  @default(now())
  Country      String
  Waypoint     Waypoint? @relation(fields: [Country, waypointName], references: [Country, name])
  Valid        Boolean   @default(true)
  Target       Target
  rf           RF
  Runway       Runway?
  waypointName String?
}

model Message {
  id      String   @id
  from    String
  to      String?
  content String
  sent_at DateTime @default(now())
  rf      RF
}

model Runway {
  Diraction   Float
  Airport     Airport   @relation(fields: [Country, AirportName], references: [country, name])
  Country     String
  AirportName String
  Lat         Float
  Lng         Float
  Length      Float
  Airplane    Airplane? @relation(fields: [airplaneId], references: [id])

  airplaneId String?
  @@id([Diraction, AirportName])
}

enum RF {
  F120D5
  F121D4
  F134D6
}

enum Target {
  Departure
  Arrive
}
